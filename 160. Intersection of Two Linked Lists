/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null || headB==null){
            return null;
        }
        int countA = 0;
        int countB = 0;
        ListNode tempA = headA;
        ListNode tempB = headB;

        while(tempA!=null){
            countA++;
            tempA=tempA.next;
        }
        while(tempB!=null){
            countB++;
            tempB=tempB.next;
        }
        tempA = headA;
        tempB = headB;
        while(countA>countB){
            countA--;
            tempA=tempA.next;
        }
        while(countB>countA){
            countB--;
            tempB=tempB.next;
        }
        while(tempA!=tempB){
            tempA=tempA.next;
            tempB=tempB.next;
        }
        return tempA==tempB ? tempA : null;
    }
}
